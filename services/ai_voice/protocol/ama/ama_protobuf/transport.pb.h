/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_TRANSPORT_PB_H_INCLUDED
#define PB_TRANSPORT_PB_H_INCLUDED
#include <pb_0_4_6.h>
#include "common.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(64) ConnectionDetails_identifier_t;
typedef struct _ConnectionDetails { 
    ConnectionDetails_identifier_t identifier;
} ConnectionDetails;

typedef struct _SwitchTransport { 
    Transport new_transport;
} SwitchTransport;

typedef struct _UpgradeTransport { 
    Transport transport;
} UpgradeTransport;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ConnectionDetails_init_default           {{0, {0}}}
#define UpgradeTransport_init_default            {_Transport_MIN}
#define SwitchTransport_init_default             {_Transport_MIN}
#define ConnectionDetails_init_zero              {{0, {0}}}
#define UpgradeTransport_init_zero               {_Transport_MIN}
#define SwitchTransport_init_zero                {_Transport_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define ConnectionDetails_identifier_tag         1
#define SwitchTransport_new_transport_tag        1
#define UpgradeTransport_transport_tag           1

/* Struct field encoding specification for nanopb */
#define ConnectionDetails_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    identifier,        1)
#define ConnectionDetails_CALLBACK NULL
#define ConnectionDetails_DEFAULT NULL

#define UpgradeTransport_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    transport,         1)
#define UpgradeTransport_CALLBACK NULL
#define UpgradeTransport_DEFAULT NULL

#define SwitchTransport_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    new_transport,     1)
#define SwitchTransport_CALLBACK NULL
#define SwitchTransport_DEFAULT NULL

extern const pb_msgdesc_t ConnectionDetails_msg;
extern const pb_msgdesc_t UpgradeTransport_msg;
extern const pb_msgdesc_t SwitchTransport_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ConnectionDetails_fields &ConnectionDetails_msg
#define UpgradeTransport_fields &UpgradeTransport_msg
#define SwitchTransport_fields &SwitchTransport_msg

/* Maximum encoded size of messages (where known) */
#define ConnectionDetails_size                   66
#define SwitchTransport_size                     2
#define UpgradeTransport_size                    2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
